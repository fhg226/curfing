<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.curfing.mapper.BoardMapper">

	<select id="getList" resultType="com.curfing.domain.BoardVO">
      <![CDATA[
         select * from cafe_r where bno > 0 
      ]]>
	</select>

	<sql id="criteria">
		<trim prefix="AND (" suffix=")" prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							cafename like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							address like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							cafeinfo like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<!-- 게시물 목록(페이징) -->
	<select id="getListPaging"
		resultType="com.curfing.domain.BoardVO">
   
   <![CDATA[
      select bno, image, memberid, cafename, address, phone, cafeinfo, price, car, opentime, dayoff, upcount
         from(
            
            select /*+INDEX_DESC(cafe_r SYS_C007208)*/
            
            rownum as rn, bno, image, memberid,cafename, address, phone, cafeinfo, price, car, opentime, dayoff, upcount
            
            from cafe_r
            
            where rownum <= #{pageNum} * #{amount}
   ]]>
		<if test="keyword != null">
			<include refid="criteria"></include> <!-- 재사용 하기 -->
		</if>
            
            
   <![CDATA[      
            )
      where rn > (#{pageNum} - 1) * #{amount}
   ]]>

	</select>





	<select id="getTotal" resultType="int">

		select count(*) from cafe_r




		<if test="keyword != null">
			where bno > 0
			<include refid="criteria"></include>
		</if>

	</select>


	<!-- 용현님 Mapper 부분 8-21 수정완료 -->



	<select id="getListWithReview"
		resultType="com.curfing.domain.ReviewVO">
      <![CDATA[
         select rownum, review.* from review inner join cafe_r on review.bno = cafe_r.bno order by review.rno desc
      ]]>
	</select>



	<select id="getUser" resultType="com.curfing.domain.UserVO">
		select * from user_t where userid = #{userid}
	</select>

	<select id="getMember" resultType="com.curfing.domain.MemberVO">
		select * from member_t where memberid = #{memberid}
	</select>

	<insert id="insert">
		insert into cafe_r(bno, memberid, cafename, address, phone, cafeinfo, price,
		car, opentime, closetime, dayoff, site) values(seq_cafe.nextval,
		#{memberid}, #{cafename}, #{address}, #{phone}, #{cafeinfo}, #{price},
		#{car}, #{opentime}, #{closetime}, #{dayoff}, #{site})
	</insert>

	<delete id="delete">
		delete cafe_r where bno = #{bno}
	</delete>

	<delete id="deleteH">
		delete hashtag_t where bno = #{bno}
	</delete>

	<delete id="deleteM">
		delete menu where bno = #{bno}
	</delete>

	<delete id="deleteAllReview">
		delete review where bno = #{bno}
	</delete>

	<delete id="deleteReview">
		delete review where rno = #{rno}
	</delete>

	<update id="update">
		update cafe_r set cafename=#{cafename}, address=#{address}, phone=#{phone},
		cafeinfo=#{cafeinfo}, price=#{price}, car=#{car},
		opentime=#{opentime}, closetime=#{closetime}, dayoff=#{dayoff},
		site=#{site}, regDate=sysdate where bno=#{bno}
	</update>

	<update id="updateM">
		update menu set cafename=#{cafename}, bno=#{bno}, menun1=#{menun1},
		menun2=#{menun2}, menun3=#{menun3}, menun4=#{menun4},
		menup1=#{menup1}, menup2=#{menup2}, menup3=#{menup3}, menup4=#{menup4}
		where bno=#{bno}
	</update>

	<update id="updateH">
		update hashtag_t set cafename=#{cafename}, bno=#{bno},
		hashtagname=#{hashtagname} where bno=#{bno}
	</update>

	<select id="read" resultType="com.curfing.domain.BoardVO">
		select * from cafe_r where bno = #{bno}
	</select>

	<insert id="insertReview">
		insert into review(rno, userid, bno, rpwd, replygrade, reply)
		values(seq_review.nextval, #{userid}, #{bno}, #{rpwd}, #{replygrade},
		#{reply})
	</insert>

	<select id="getMenu" resultType="com.curfing.domain.MenuVO">
		select * from menu where bno = #{bno}
	</select>

	<select id="getHashtag"
		resultType="com.curfing.domain.HashtagVO">
		select * from hashtag_t where bno = #{bno}
	</select>

	<insert id="insertMenu">
		insert into menu(menuno, menun1, menun2, menun3, menun4, menup1, menup2,
		menup3, menup4, cafename) values(seq_menu.nextval, #{menun1},
		#{menun2}, #{menun3}, #{menun4}, #{menup1}, #{menup2}, #{menup3},
		#{menup4}, #{cafename})
	</insert>

	<update id="insertMenuBno">
		merge
		into menu
		using cafe_r
		on (menu.cafename = cafe_r.cafename)
		when matched then
		update
		set menu.bno = cafe_r.bno

	</update>

	<insert id="insertHashtag">
		insert into hashtag_t(hno, hashtagname, cafename)
		values(seq_hashtag.nextval, #{hashtagname}, #{cafename})
	</insert>

	<update id="insertHashtagBno">
		merge
		into hashtag_t
		using cafe_r
		on (hashtag_t.cafename = cafe_r.cafename)
		when matched then
		update
		set hashtag_t.bno = cafe_r.bno

	</update>

	<select id="getReviewList"
		resultType="com.curfing.domain.ReviewVO">
      <![CDATA[
      select * from review where bno = #{bno} order by rno desc
      ]]>
	</select>

	<!--선경 페이지 불러오기 오름차순으로 -->
	<select id="getListWithPaging"
		resultType="com.curfing.domain.BoardVO">

		select bno,memberid,cafename,address,phone,cafeinfo,
		price,car,opentime,dayoff,upcount,jjimcount
		from(
		select /*+INDEX_DESC(cafe_r SYS_C007010)*/
		rownum rn, bno, memberid, cafename, address, phone, cafeinfo, price, car,
		opentime, dayoff, upcount,jjimcount
		from cafe_r
		where
          
           <![CDATA[
                 rownum <= #{pageNum} * #{amount}
            ) 
            where rn > (#{pageNum} - 1) * #{amount}
             
            ]]>
	</select>

	<!-- 목록 조회수 <select id="getTotalCount" resultType="int"> select count(*) 
		from t_board where <![CDATA[ bno > 0 ]]> </select> -->

	<!-- 카운트 전달 -->
	<update id="updateCount" parameterType="long">
		UPDATE SCOTT.CAFE_R
		SET
		UPCOUNT=UPCOUNT + 1
		WHERE BNO=#{bno}
	</update>

	<!-- 댓글 리스트 -->
	<select id="getListOrderReviewCount"
		resultType="com.curfing.domain.BoardVO">
      <![CDATA[
      SELECT a.bno,a.memberid,a.cafename,a.address,a.phone,a.cafeinfo,a.price,a.car, a.opentime,a.dayoff, a.upcount,a.jjimcount
      FROM (
         SELECT  c.bno,c.memberid,c.cafename,c.address,c.phone,c.cafeinfo, c.price,c.car,c.opentime,c.dayoff,c.upcount,c.jjimcount
         from CAFE_R c
         LEFT JOIN REVIEW r
         ON c.BNO = r.BNO
         WHERE rownum <= #{pageNum} * #{amount}
         GROUP BY  c.bno,c.memberid,c.cafename,c.address,c.phone,c.cafeinfo, c.price,c.car,c.opentime,c.dayoff,c.upcount,c.jjimcount
         ORDER BY COUNT(r.BNO) DESC
      ) a
      WHERE rownum > (#{pageNum} - 1) * #{amount}
      ]]>
	</select>

	<!-- 별점 리스트 -->
	<select id="getListjjimcount"
		resultType="com.curfing.domain.BoardVO">
   <![CDATA[
      SELECT a.bno,a.memberid,a.cafename,a.address,a.phone,a.cafeinfo,a.price,a.car,a.opentime,a.dayoff, a.upcount, a.jjimcount
      FROM(
       SELECT v.bno,v.memberid,v.cafename,v.address,v.phone,v.cafeinfo,v.price,v.car,v.opentime,v.dayoff,v.upcount, v.jjimcount
       from cafe_r v
      LEFT JOIN jjim f
      ON v.BNO = f.BNO
      WHERE rownum <= #{pageNum} * #{amount}
      GROUP BY  v.bno, v.memberid, v.cafename, v.address, v.phone, v.cafeinfo, v.price, v.car, v.opentime, v.dayoff, v.upcount, v.jjimcount
      ORDER BY COUNT(f.BNO) DESC
      ) a
      WHERE rownum > (#{pageNum} - 1) * #{amount}
      ]]>
	</select>
	
	<!-- 인기 정렬 카운트 많은 순으로  -->
	<select id="getupcount" 
	resultType="com.curfing.domain.BoardVO">

		SELECT bno, memberid,cafename, address, phone, cafeinfo, image, price , car,opentime , closetime, dayoff, site, upcount, regDate,updateDate,jjimcount
		 FROM cafe_r ORDER BY upcount DESC
	</select>




</mapper>